// Script de test pour v√©rifier le changement de cat√©gories
(function() {
  console.log('üß™ Test des changements de cat√©gories de pilotes...');
  
  function testCategoryChange() {
    // Obtenir les boutons de cat√©gorie
    const buttons = document.querySelectorAll('[data-testid], button');
    const categoryButtons = Array.from(buttons).filter(btn => 
      btn.textContent?.includes('125cc') || 
      btn.textContent?.includes('250cc') || 
      btn.textContent?.includes('450cc')
    );
    
    if (categoryButtons.length === 0) {
      console.log('‚ùå Boutons de cat√©gorie non trouv√©s');
      return;
    }
    
    console.log(`‚úÖ Trouv√© ${categoryButtons.length} boutons de cat√©gorie`);
    
    // Fonction pour tester une cat√©gorie
    function testCategory(categoryBtn, categoryName) {
      return new Promise((resolve) => {
        console.log(`üîÑ Test de la cat√©gorie: ${categoryName}`);
        
        // Cliquer sur le bouton
        categoryBtn.click();
        
        // Attendre que les images changent
        setTimeout(() => {
          const images = document.querySelectorAll('img[alt*="BRUNEAU"], img[alt*="DESPREY"], img[alt*="SOUBEYRAS"]');
          const imagesSrc = Array.from(images).map(img => img.src);
          
          console.log(`üìä Images visibles apr√®s clic sur ${categoryName}:`, imagesSrc);
          
          // V√©rifier si les images correspondent √† la cat√©gorie
          const has125Images = imagesSrc.some(src => src.includes('pilotes_125'));
          const has250Images = imagesSrc.some(src => src.includes('pilotes_250'));
          const has450Images = imagesSrc.some(src => src.includes('pilotes_450'));
          
          console.log(`üîç R√©sultats pour ${categoryName}:`, {
            has125Images,
            has250Images,
            has450Images
          });
          
          resolve({ categoryName, has125Images, has250Images, has450Images });
        }, 2000);
      });
    }
    
    // Tester chaque cat√©gorie
    async function runTests() {
      const results = [];
      
      for (const btn of categoryButtons) {
        const categoryName = btn.textContent?.trim() || 'Unknown';
        const result = await testCategory(btn, categoryName);
        results.push(result);
      }
      
      console.log('\nüìà R√âSULTATS FINAUX:');
      results.forEach(result => {
        console.log(`${result.categoryName}:`, {
          '125 images': result.has125Images,
          '250 images': result.has250Images,
          '450 images': result.has450Images
        });
      });
      
      // V√©rifier la coh√©rence
      const issues = results.filter(result => {
        if (result.categoryName.includes('125')) return !result.has125Images;
        if (result.categoryName.includes('250')) return !result.has250Images;
        if (result.categoryName.includes('450')) return !result.has450Images;
        return false;
      });
      
      if (issues.length === 0) {
        console.log('‚úÖ Tous les tests sont r√©ussis !');
      } else {
        console.log('‚ùå Probl√®mes d√©tect√©s:', issues);
      }
    }
    
    runTests();
  }
  
  // Attendre que la page soit charg√©e
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', testCategoryChange);
  } else {
    setTimeout(testCategoryChange, 3000);
  }
  
  // Exposer la fonction pour tests manuels
  window.testCategoryChange = testCategoryChange;
  
  console.log('üí° Tapez testCategoryChange() pour lancer les tests manuellement');
})();
